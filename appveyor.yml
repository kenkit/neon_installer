version: 1.0.{build}
branches:
  only:
    - master
skip_tags: true
build:
  verbosity: minimal
image: Visual Studio 2019
environment:
  global:
    paperkey:
      secure: MxOJZPR1tTkos0f/z1rM4fjHtWmg4kR3B6uAz8u59R5uDteHyeOSFYwATBPonHVC8oSKAWyrtma2Krk1fIXPMJs+FizIDsxh8VhsgMaeNnU=
build_script:
  - cmd: >-
      

      curl -fsS -o keybase_setup_amd64.msi "https://prerelease.keybase.io/keybase_setup_amd64.msi"

      start /wait msiexec.exe /i keybase_setup_amd64.msi   /quiet /l*v keybase.log

      set PATH=%PATH%;%localappdata%\Keybase\

      keybase -v

      echo "loging in to keybase"
    
      ping -n 4 127.0.0.1>nul

      call keybase oneshot -u kenkit --paperkey "%paperkey%"

      git config --global --add protocol.keybase.allow always

      set ROOT=%cd%
      
      cd ../
    
      IF NOT EXIST  "qt-everywhere-opensource-src-4.8.7" 
      (curl -L --progress-bar --insecure "https://www.dropbox.com/s/g5o8v8j0ocllvld/encrypted.cont?dl=1" -o encrypted.cont && keybase decrypt -i encrypted.cont -o  qt-everywhere-opensource-src-4.8.7_build.zip  && call 7z x qt-everywhere-opensource-src-4.8.7_build.zip)
      
      
      cd qt-everywhere-opensource-src-4.8.7
      
      set QTDIR=%cd%\
      
      cd bin
      
      set QT_BIN=%cd%\
      
      set PATH=%PATH%;%cd%
      
      dir .
      
      set OPENSSL_ROOT_DIR=C:\OpenSSL-Win32\
    
      cd %ROOT%

      rm -fr neon_installer

      git clone keybase://private/kenkit/neon_installer

      cd neon_installer

      git submodule update --init --recursive

      mkdir build

      cd build

      set BOOST_ROOT=C:\Libraries\boost_1_71_0

      cmake  -A Win32 ../ -DBOOST_ROOT=%BOOST_ROOT% -DOPENSSL_ROOT_DIR=C:/OpenSSL-Win32/ -DCMAKE_BUILD_TYPE=Release -DQT_MOC_EXECUTABLE=%QT_BIN%\moc.exe -DQT_RCC_EXECUTABLE=%QT_BIN%\rcc.exe -DQT_UIC_EXECUTABLE=%QT_BIN%\uic.exe -DCMAKE_USE_WINSSL=1 -DCMAKE_USE_OPENSSL=0 -DBUILD_TESTING=0 -DBUILD_SHARED_LIBS=1  -DVERSION_URL="https://ci.appveyor.com/api/projects/kenkit/neon-installer"

      cmake --build ../build --config Release -j2

      cpack . -C Release
artifacts:
  - path: 'neon_installer/build/NeonUpdater*-win32.msi'
    name: NeonUpdater-win32.msi
before_deploy:
  - ps: >-
      echo "NEON CHANGELOG"  | Add-Content  -Encoding UTF8 -Path tmp

      echo "************************"  | Add-Content  -Encoding UTF8 -Path tmp

      git log -10   --pretty="%aD--%B" |Add-Content  -Encoding UTF8 -Path tmp

      $currntly=(Resolve-Path .\).Path

      cd $currntly

      $rnp = Resolve-Path("tmp")

      $rnc = [IO.File]::ReadAllText($rnp)

      Set-AppveyorBuildVariable -Name release_description -Value $rnc

deploy:
  - provider: GitHub
    description: $(release_description)
    auth_token:
      secure: 01oN0sew4MzhHwKsFR7WSabMnqgCt2gZtjS6ywYslcnGyt7XFnOIbzNBfwSTV1Xc
    repository: kenkit/neon_installer
    artifact: NeonUpdater-win32.msi
